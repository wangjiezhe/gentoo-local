From f3790c6a6649d3e754abb6bc58e733c771f64677 Mon Sep 17 00:00:00 2001
From: wangjiezhe <wangjiezhe@gmail.com>
Date: Fri, 24 Nov 2023 16:54:18 +0800
Subject: [PATCH 08/17] Relax setup.py version requirements

---
 tensorflow/tools/pip_package/setup.py | 34 +++++++++++++--------------
 1 file changed, 17 insertions(+), 17 deletions(-)

diff --git a/tensorflow/tools/pip_package/setup.py b/tensorflow/tools/pip_package/setup.py
index 88da8b54082..b46e6515052 100644
--- a/tensorflow/tools/pip_package/setup.py
+++ b/tensorflow/tools/pip_package/setup.py
@@ -82,7 +82,7 @@ REQUIRED_PACKAGES = [
     'gast >=0.2.1,!=0.5.0,!=0.5.1,!=0.5.2',
     'google_pasta >= 0.1.1',
     'h5py >= 3.10.0',
-    'libclang >= 13.0.0',
+    # 'libclang >= 13.0.0',
     'ml_dtypes >= 0.3.1, < 0.5.0',
     # TODO(b/304751256): Adjust the numpy pin to a single version, when ready
     'numpy >= 1.23.5, < 2.0.0 ; python_version <= "3.11"',
@@ -91,7 +91,7 @@ REQUIRED_PACKAGES = [
     'packaging',
     # pylint:disable=line-too-long
     (
-        'protobuf>=3.20.3,<5.0.0dev,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5'
+        'protobuf>=3.20.3,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5'
     ),
     'requests >= 2.21.0, < 3',
     'setuptools',
@@ -100,7 +100,7 @@ REQUIRED_PACKAGES = [
     'typing_extensions >= 3.6.6',
     'wrapt >= 1.11.0',
     # TODO(b/305196096): Remove the <3.12 condition once the pkg is updated
-    'tensorflow-io-gcs-filesystem >= 0.23.1 ; python_version < "3.12"',
+    # 'tensorflow-io-gcs-filesystem >= 0.23.1 ; python_version < "3.12"',
     # grpcio does not build correctly on big-endian machines due to lack of
     # BoringSSL support.
     # See https://github.com/tensorflow/tensorflow/issues/17882.
@@ -129,8 +129,8 @@ FAKE_REQUIRED_PACKAGES = [
     _VERSION + ';platform_system=="Windows"',
 ]
 
-if platform.system() == 'Linux' and platform.machine() == 'x86_64':
-  REQUIRED_PACKAGES.append(FAKE_REQUIRED_PACKAGES)
+# if platform.system() == 'Linux' and platform.machine() == 'x86_64':
+#   REQUIRED_PACKAGES.append(FAKE_REQUIRED_PACKAGES)
 
 if collaborator_build:
   # If this is a collaborator build, then build an "installer" wheel and
@@ -150,18 +150,18 @@ if collaborator_build:
 EXTRA_PACKAGES = {}
 EXTRA_PACKAGES['and-cuda'] = [
     # TODO(nluehr): set nvidia-* versions based on build components.
-    'nvidia-cublas-cu12 == 12.3.4.1',
-    'nvidia-cuda-cupti-cu12 == 12.3.101',
-    'nvidia-cuda-nvcc-cu12 == 12.3.107',
-    'nvidia-cuda-nvrtc-cu12 == 12.3.107',
-    'nvidia-cuda-runtime-cu12 == 12.3.101',
-    'nvidia-cudnn-cu12 == 8.9.7.29',
-    'nvidia-cufft-cu12 == 11.0.12.1',
-    'nvidia-curand-cu12 == 10.3.4.107',
-    'nvidia-cusolver-cu12 == 11.5.4.101',
-    'nvidia-cusparse-cu12 == 12.2.0.103',
-    'nvidia-nccl-cu12 == 2.19.3',
-    'nvidia-nvjitlink-cu12 == 12.3.101',
+    'nvidia-cublas-cu12 >= 12.3.4.1',
+    'nvidia-cuda-cupti-cu12 >= 12.3.101',
+    'nvidia-cuda-nvcc-cu12 >= 12.3.107',
+    'nvidia-cuda-nvrtc-cu12 >= 12.3.107',
+    'nvidia-cuda-runtime-cu12 >= 12.3.101',
+    'nvidia-cudnn-cu12 >= 8.9.7.29',
+    'nvidia-cufft-cu12 >= 11.0.12.1',
+    'nvidia-curand-cu12 >= 10.3.4.107',
+    'nvidia-cusolver-cu12 >= 11.5.4.101',
+    'nvidia-cusparse-cu12 >= 12.2.0.103',
+    'nvidia-nccl-cu12 >= 2.19.3',
+    'nvidia-nvjitlink-cu12 >= 12.3.101',
 ]
 
 DOCLINES = __doc__.split('\n')
-- 
2.44.2

