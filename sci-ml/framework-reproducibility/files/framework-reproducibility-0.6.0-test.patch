diff --git a/fwr13y/d9m/utils.py b/fwr13y/d9m/utils.py
index 0d5cb95..b52f936 100644
--- a/fwr13y/d9m/utils.py
+++ b/fwr13y/d9m/utils.py
@@ -27,7 +27,7 @@ class _Version:
   def __init__(self, version_string):
     """Provide a version string containing at least a major and minor version"""
     _confirm_string(version_string)
-    version_pieces = re.split('\.|-', version_string)
+    version_pieces = re.split(r'\.|-', version_string)
     if len(version_pieces) < 2:
       raise ValueError("The version string must contain at least a major and a minor version")
     major = version_pieces[0]
diff --git a/test/d9m/get_version.py b/test/d9m/get_version.py
index 910a93a..b02f16a 100755
--- a/test/d9m/get_version.py
+++ b/test/d9m/get_version.py
@@ -14,8 +14,7 @@
 # ========================================================================
 
 import sys
-sys.path.insert(0,'../../fwr13y')
-from version import __version__
+from fwr13y.version import __version__
 
 def get_version():
   return __version__
diff --git a/test/d9m/test_bias_add_d9m.py b/test/d9m/test_bias_add_d9m.py
index 535b76e..2b38350 100644
--- a/test/d9m/test_bias_add_d9m.py
+++ b/test/d9m/test_bias_add_d9m.py
@@ -34,7 +34,6 @@ from __future__ import print_function
 
 import os
 import sys
-sys.path.insert(0, '../..')
 
 import numpy as np
 import tensorflow as tf
diff --git a/test/d9m/test_enable_determinism_apply.py b/test/d9m/test_enable_determinism_apply.py
index 7f033ab..c8918e8 100644
--- a/test/d9m/test_enable_determinism_apply.py
+++ b/test/d9m/test_enable_determinism_apply.py
@@ -21,7 +21,5 @@ import sys
 
 import tensorflow as tf
 
-sys.path.insert(0, '../..')
-
 from fwr13y.d9m.tensorflow import enable_determinism
 enable_determinism()
diff --git a/test/d9m/test_misc.py b/test/d9m/test_misc.py
index fbb3146..7a1abfc 100644
--- a/test/d9m/test_misc.py
+++ b/test/d9m/test_misc.py
@@ -16,7 +16,6 @@
 import sys
 import unittest
 
-sys.path.insert(0, '../..')
 import fwr13y
 import get_version
 
diff --git a/test/d9m/test_patch_apply.py b/test/d9m/test_patch_apply.py
deleted file mode 100644
index 3eadde8..0000000
--- a/test/d9m/test_patch_apply.py
+++ /dev/null
@@ -1,45 +0,0 @@
-# Copyright 2019 NVIDIA Corporation. All Rights Reserved
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-# ========================================================================
-
-from __future__ import absolute_import
-from __future__ import division
-from __future__ import print_function
-
-import sys
-
-import tensorflow as tf
-
-sys.path.insert(0, '../..')
-
-expected_exception = None
-if len(sys.argv) > 2 and sys.argv[1] == "--expected-exception":
-  expected_exception_string = sys.argv[2]
-  if expected_exception_string == "TypeError":
-    expected_exception = TypeError
-
-from fwr13y.d9m.tensorflow import patch
-try:
-  patch()
-except Exception as e:
-  if type(e) == expected_exception:
-    print("Expected exception (%s) caught: " % expected_exception_string + str(e))
-    sys.exit(0)
-  else:
-    print("Unexpected exception: %s" % str(e))
-    sys.exit(1)
-
-if expected_exception is not None:
-  print("Expected exception (%s) didn't occur!" % expected_exception_string)
-  sys.exit(1)
diff --git a/test/d9m/test_segment_sum_d9m.py b/test/d9m/test_segment_sum_d9m.py
index cfafabc..40b534f 100644
--- a/test/d9m/test_segment_sum_d9m.py
+++ b/test/d9m/test_segment_sum_d9m.py
@@ -56,7 +56,6 @@ from tensorflow.python.platform import test
 sys.path.append(os.path.dirname(os.path.abspath(__file__)))
 from segment_reduction_helper import SegmentReductionHelper
 
-sys.path.insert(0, '../..')
 import fwr13y.d9m.tensorflow as tf_determinism
 import utils as local_test_utils
 
diff --git a/test/d9m/test_unsorted_segment_sum_d9m.py b/test/d9m/test_unsorted_segment_sum_d9m.py
index 73a9c31..9774b8f 100644
--- a/test/d9m/test_unsorted_segment_sum_d9m.py
+++ b/test/d9m/test_unsorted_segment_sum_d9m.py
@@ -56,7 +56,6 @@ from tensorflow.python.platform import test
 sys.path.append(os.path.dirname(os.path.abspath(__file__)))
 from segment_reduction_helper import SegmentReductionHelper
 
-sys.path.insert(0, '../..')
 import fwr13y.d9m.tensorflow as tf_determinism
 import utils as local_test_utils
 
diff --git a/test/d9m/test_utils.py b/test/d9m/test_utils.py
index 55d5da7..43ee936 100644
--- a/test/d9m/test_utils.py
+++ b/test/d9m/test_utils.py
@@ -16,7 +16,6 @@
 import sys
 import unittest
 
-sys.path.insert(0, '../..')
 from fwr13y.d9m.utils import _Version as Version
 
 class TestUtils(unittest.TestCase):
diff --git a/test/seeder/test_generated_random_numbers.py b/test/seeder/test_generated_random_numbers.py
index 5d039bb..fbe67a4 100644
--- a/test/seeder/test_generated_random_numbers.py
+++ b/test/seeder/test_generated_random_numbers.py
@@ -69,7 +69,7 @@ def generate_random_numbers(
             writer.writerow(row)
 
 
-def test_randomness(master_seed):
+def test_randomness(master_seed=42):
 
     # seedeing functions for random number generators
     seed_functions = (torch.manual_seed, np.random.seed, random.seed)
diff --git a/test/seeder/test_print_stats.py b/test/seeder/test_print_stats.py
deleted file mode 100644
index a393298..0000000
--- a/test/seeder/test_print_stats.py
+++ /dev/null
@@ -1,41 +0,0 @@
-# Copyright (c) 2022, NVIDIA CORPORATION. All rights reserved.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-# ========================================================================
-
-import argparse
-import pandas as pd
-from print_stats import print_stats
-
-def parse_args():
-    parser = argparse.ArgumentParser()
-
-    parser.add_argument(
-        "--log-file",
-        type=str,
-        help="Input log file",
-    )
-    return parser
-
-
-def main():
-
-    parser = parse_args()
-    args = parser.parse_args()
-
-    pdata = pd.read_csv(args.log_file, index_col=0)
-    print_stats(pdata)
-
-
-if __name__ == "__main__":
-    main()
diff --git a/test/seeder/test_seeder.py b/test/seeder/test_seeder.py
index 266a602..9108ee5 100644
--- a/test/seeder/test_seeder.py
+++ b/test/seeder/test_seeder.py
@@ -18,7 +18,6 @@ import numpy as np
 
 from os.path import abspath, dirname
 import sys
-sys.path.append(dirname(abspath(__file__))+'/../../')
 import fwr13y.seeder.pyt as seeder
 
 class GetSeed:
@@ -37,7 +36,7 @@ def test_seeder():
 
     def generate_seeds():
         for local_rank in range(8):
-            seeder.init(master_seed=master_seed, ngpus=8, local_rank=local_rank)
+            seeder.init(master_seed=int(master_seed), ngpus=8, local_rank=local_rank)
             gs = GetSeed()
             seeder.register_generator(gs.get_seed)
 
