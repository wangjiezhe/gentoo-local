diff --git a/caffe2/utils/proto_utils.h b/caffe2/utils/proto_utils.h
index a6903425ab4..f088d1a5577 100644
--- a/caffe2/utils/proto_utils.h
+++ b/caffe2/utils/proto_utils.h
@@ -71,8 +71,33 @@ inline bool ParseFromString(const string& spec, MessageLite* proto) {
 
 
 TORCH_API string ProtoDebugString(const MessageLite& proto);
+inline string ProtoDebugString(const MessageLite& proto) {
+  string serialized = proto.SerializeAsString();
+  for (char& c : serialized) {
+    if (c < 0x20 || c >= 0x7f) {
+      c = '?';
+    }
+  }
+  return serialized;
+}
+
+inline void setTotalBytesLimit(::google::protobuf::io::CodedInputStream& stream, int bytes_limit, int warning_threshold) {
+  #if GOOGLE_PROTOBUF_VERSION >= 3011000
+    // Only take one parameter since protobuf 3.11
+    stream.SetTotalBytesLimit(bytes_limit);
+  #else
+    stream.SetTotalBytesLimit(bytes_limit, warning_threshold);
+  #endif
+}
 
 TORCH_API bool ParseProtoFromLargeString(const string& str, MessageLite* proto);
+inline bool ParseProtoFromLargeString(const string& str, MessageLite* proto) {
+  ::google::protobuf::io::ArrayInputStream input_stream(str.data(), str.size());
+  ::google::protobuf::io::CodedInputStream coded_stream(&input_stream);
+  // Set PlanDef message size limit to 2G.
+  setTotalBytesLimit(coded_stream, 2147483647, 512LL << 20);
+  return proto->ParseFromCodedStream(&coded_stream);
+}
 
 // Text format MessageLite wrappers: these functions do nothing but just
 // allowing things to compile. It will produce a runtime error if you are using
