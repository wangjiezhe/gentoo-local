From f510a0eafeefd9ba9cd66237f7fc665267b6dfc9 Mon Sep 17 00:00:00 2001
From: wangjiezhe <wangjiezhe@gmail.com>
Date: Mon, 17 Feb 2025 13:50:38 +0800
Subject: [PATCH] Use global dlopen

---
 torch/__init__.py | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/torch/__init__.py b/torch/__init__.py
index f361c6b6cdf..d95b55f2005 100644
--- a/torch/__init__.py
+++ b/torch/__init__.py
@@ -315,7 +315,7 @@ def _load_global_deps() -> None:
     global_deps_lib_path = os.path.join(os.path.dirname(here), "lib", lib_name)
 
     try:
-        ctypes.CDLL(global_deps_lib_path, mode=ctypes.RTLD_GLOBAL)
+        ctypes.CDLL(lib_name, mode=ctypes.RTLD_GLOBAL)
         # Workaround slim-wheel CUDA dependency bugs in cusparse and cudnn by preloading nvjitlink
         # and nvrtc. In CUDA-12.4+ cusparse depends on nvjitlink, but does not have rpath when
         # shipped as wheel, which results in OS picking wrong/older version of nvjitlink library
@@ -360,7 +360,7 @@ def _load_global_deps() -> None:
             raise err
         for lib_folder, lib_name in cuda_libs.items():
             _preload_cuda_deps(lib_folder, lib_name)
-        ctypes.CDLL(global_deps_lib_path, mode=ctypes.RTLD_GLOBAL)
+        ctypes.CDLL(lib_name, mode=ctypes.RTLD_GLOBAL)
 
 
 if (USE_RTLD_GLOBAL_WITH_LIBTORCH or os.getenv("TORCH_USE_RTLD_GLOBAL")) and (
-- 
2.45.3

