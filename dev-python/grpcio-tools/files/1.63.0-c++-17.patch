diff -ur grpcio_tools-1.63.0/grpc_tools/_protoc_compiler.cpp grpcio_tools-1.63.0_modified/grpc_tools/_protoc_compiler.cpp
--- grpcio_tools-1.63.0/grpc_tools/_protoc_compiler.cpp	2024-04-26 14:46:17.000000000 +0800
+++ grpcio_tools-1.63.0_modified/grpc_tools/_protoc_compiler.cpp	2024-05-07 17:25:22.267274567 +0800
@@ -13,7 +13,7 @@
             "grpc_tools/main.h"
         ],
         "extra_compile_args": [
-            "-std=c++14",
+            "-std=c++17",
             "-fno-wrapv",
             "-frtti",
             "-O1"
diff -ur grpcio_tools-1.63.0/setup.py grpcio_tools-1.63.0_modified/setup.py
--- grpcio_tools-1.63.0/setup.py	2024-04-26 14:29:22.000000000 +0800
+++ grpcio_tools-1.63.0_modified/setup.py	2024-05-07 17:25:39.057274573 +0800
@@ -89,7 +89,7 @@
     )
     cxx = os.environ.get("CXX", "c++")
     cpp_test = subprocess.Popen(
-        [cxx, "-x", "c++", "-std=c++14", "-"],
+        [cxx, "-x", "c++", "-std=c++17", "-"],
         stdin=PIPE,
         stdout=PIPE,
         stderr=PIPE,
@@ -100,7 +100,7 @@
     # Double-check to see if -latomic actually can solve the problem.
     # https://github.com/grpc/grpc/issues/22491
     cpp_test = subprocess.Popen(
-        [cxx, "-x", "c++", "-std=c++14", "-", "-latomic"],
+        [cxx, "-x", "c++", "-std=c++17", "-", "-latomic"],
         stdin=PIPE,
         stdout=PIPE,
         stderr=PIPE,
@@ -173,7 +173,7 @@
         EXTRA_ENV_COMPILE_ARGS += " /MT"
     elif "linux" in sys.platform:
         # GCC by defaults uses C17 so only C++14 needs to be specified.
-        EXTRA_ENV_COMPILE_ARGS += " -std=c++14"
+        EXTRA_ENV_COMPILE_ARGS += " -std=c++17"
         EXTRA_ENV_COMPILE_ARGS += " -fno-wrapv -frtti"
         # Reduce the optimization level from O3 (in many cases) to O1 to
         # workaround gcc misalignment bug with MOVAPS (internal b/329134877)
