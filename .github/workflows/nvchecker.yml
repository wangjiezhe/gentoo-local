name: nvchecker

on:
  push:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    # UTC 09:00 -> CST (China) 17:00, see https://datetime360.com/cn/utc-cst-china-time/
    - cron: '0 09 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  nvchecker:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/liangyongxiang/gentoo-testing:master

    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: gentoo
      run: |
        # unmask packages
        echo "::group::relax unmasked packages"
        sed -i -e "s/^=\(.*\)-[0-9.*]\+$/\1/" profiles/package.unmask
        cat profiles/package.unmask
        echo "::endgroup::"

        # eselect
        echo "::group::eselect repository add and sync"
        repo_name=$(cat profiles/repo_name)
        eselect repository add "$repo_name" git "file://${PWD}"
        emerge --sync "$repo_name"
        cat profiles/package.unmask
        cat /var/db/repos/local/profiles/package.unmask
        eix tensorflow
        egencache --jobs=$(nproc) --update --repo "$repo_name" &> /dev/null
        eix-update
        echo "::endgroup::"

        # eix
        echo "::group::eix search packages"
        cat profiles/package.unmask
        cat /var/db/repos/local/profiles/package.unmask
        eix tensorflow
        pkgs=$(ACCEPT_LICENSE="*" ACCEPT_KEYWORDS="~amd64" EIX_LIMIT=0 NAMEVERSION="<category>/<name>-<version>\n" eix --pure-packages --in-overlay "$repo_name" --format '<bestversion:NAMEVERSION>')
        pkgs=$(qatom -F "\"%{CATEGORY}/%{PN}\": \"%{PV}\"," $pkgs) # remove revision
        echo "$pkgs"
        pkgs="{ ${pkgs::-1} }"
        echo "$pkgs" > .github/workflows/old_ver.json

        sed -r -i \
          -e 's#(\.|-|_)?p([[:digit:]]{8})(",?)$#\3#' \
          .github/workflows/old_ver.json

        cat .github/workflows/old_ver.json
        echo "::endgroup::"

        # homepage
        echo "::group::eix search homepage for packages"
        pkgs=$(ACCEPT_LICENSE="*" ACCEPT_KEYWORDS="~amd64" EIX_LIMIT=0 NAMEVERSION='"<category>/<name>": "<homepage>", ' eix --pure-packages --in-overlay "$repo_name" --format '<bestversion:NAMEVERSION>')
        echo "$pkgs" | sed 's/, /\n/g'
        echo "homepages={ ${pkgs::-2} }" >> $GITHUB_ENV

    - name: nvchecker
      id: nvchecker
      run: |
        echo "::group::nvchecker and nvcmp"
        cd .github/workflows/
        echo -e "[keys]\ngithub = \"${{ secrets.GITHUB_TOKEN }}\"" > keyfile.toml
        nvchecker --file overlay.toml --keyfile keyfile.toml

        sed -r -i \
          -e 's#(\.|-|_)?post([[:digit:]]+)(",?)$#_p\2\3#' \
          new_ver.json

        cat new_ver.json
        echo "nvcmp=$(nvcmp --file overlay.toml --json --newer)" >> $GITHUB_OUTPUT
        echo "::endgroup::"

    - name: setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: install github-script depends
      run: |
        npm install toml

    - name: update issues
      uses: actions/github-script@v6
      timeout-minutes: 1
      env:
        pkgs: ${{ steps.nvchecker.outputs.nvcmp }}
      with:
        github-token: ${{ secrets.NVCHECKER_PAT }}
        script: |
          const script = require('./.github/workflows/issues-bumper.js');
          (async function () {
            await script({github, context, core});
          })();
